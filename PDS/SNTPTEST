SNTPTEST CSECT
SNTPTEST AMODE ANY
SNTPTEST RMODE 24
*
*        PRINT NOGEN
*
***********************************************************************
*                                                                     *
*   MODULE NAME:  SNTPTEST test SNTP timestamp creation               *
*                                                                     *
*   Kenneth W. Clapp                                                  *
*   7 October 1999                                                    *
*                                                                     *
*   LANGUAGE:  Assembler                                              *
*                                                                     *
*   ATTRIBUTES: NON-REUSABLE, AUTHORIZED                              *
*                                                                     *
*   REGISTER USAGE:                                                   *
*        R1  =                                                        *
*        R2  =                                                        *
*        R3  =                                                        *
*        R4  = work     - even seconds                                *
*        R5  = work     - fractional seconds                          *
*        R6  = work                                                   *
*        R7  = work                                                   *
*        R8  =                                                        *
*        R9  =                                                        *
*        R10 = RETURN REG                                             *
*        R11 =                                                        *
*        R12 =               BASE REG 2                               *
*        R13 = SAVE AREA   & BASE REG 1                               *
*        R14 =                                                        *
*        R15 =                                                        *
*                                                                     *
*   INPUT: NONE                                                       *
*   OUTPUT: SYSPRINT results                                          *
*                                                                     *
***********************************************************************
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
* ------ START OF EXECUTABLE CODE ---------------------------------
*
         USING BEGIN,R15               TEMP ADDRESSABILITY
*
BEGIN    B     SAVE                    JUMP OVER CONSTANTS
         DC    F'0'                    ADDR OF PREV SAVE AREA
         DC    F'0'                    ADDR OF NEXT SAVE AREA
         DC    15F'0'                  REGS 14 - 12
         DC    18F'0'                  SECOND LEVEL SAVE AREA
VERSION  DC    CL60'SNTPTEST V1.1 : ASSEMBLED &SYSDATE &SYSTIME '
SAVE     DS    0H
         SAVE (14,12)
         ST   15,8(,13)                ADDRESS OF THIS SAVE AREA
         ST   13,4(,15)                ADDRESS OF THIS LAST AREA
         LR   13,15                    ESTABLISH ADDRESSABILITY
         LR   12,13
         LA   12,2048(,R12)            SETUP SECOND BASE REGISTER
         LA   12,2048(,R12)            SETUP SECOND BASE REGISTER
*
         DROP 15
         USING BEGIN,R13,R12           READY TO ROLL
*
* ------ OPEN LOG FILE --------------------------------------------
*
         OPEN  (SYSPRINT,(OUTPUT)),MODE=31
*
***********************************************************************
*                                                                     *
*        Issue READ - Read data and store in buffer                   *
*                                                                     *
***********************************************************************
*
         LA    R11,20
*
LOOP     EQU   *
*
         BAL   R10,GETTIME        RECEIVE TIME
*
         STM   R4,R5,NTPSTAMP     STORE STAMP
*
         MVC   PRINTLIN+00(08),=CL8'STCK    '
*
         LA    R3,IBMCLOCK
         LA    R4,8
         LA    R5,PRINTLIN+08
         BAL   R10,DUMPREC        CHARACTER FORMAT HEX RECORD
*
         MVC   PRINTLIN+40(08),=CL8'SNTP    '
         LA    R3,NTPSTAMP
         LA    R4,8
         LA    R5,PRINTLIN+48
         BAL   R10,DUMPREC        CHARACTER FORMAT HEX RECORD
*
         BAL   R10,LOG            PRINT TO LOG
*
         STIMER WAIT,BINTVL=WAITTIME   WAIT A MOMENT
*
         BCT   R11,LOOP
*
*---------------------------------------------------------------------*
*        Return
*---------------------------------------------------------------------*
*
TERM     EQU   *
*
         CLOSE SYSPRINT                CLOSE PRINTER
*
         L     R13,4(R13)
         RETURN (14,12),T,RC=0
*
* ------ DELAY TIME --------------------------------------------------
*
WAITTIME DC    F'00000013'          100 = 1 SECOND WAIT TIME
*
*---------------------------------------------------------------------*
*        TRANSLATE PACKET TO CHARACTER FORMAT
*        R3 - SOURCE
*        R4 - LENGTH
*        R5 - DEST
*---------------------------------------------------------------------*
*
DUMPREC  DS    0H
*
***      LA    R3,PACKET              SNTP PACKET
***      L     R4,NBYTE               NUMBER OF BYTES
***      LA    R5,PRINTLIN+25         OUTPUT AREA
***            R6                     COMPUTED INDEX
         L     R7,=A(X2CTBL)          HEX TO CHAR TABLE
*
DUMPLOOP EQU   *
         XR    R6,R6                   CLEAR REG 6
         IC    R6,0(,R3)               GET HEX BYTE
         SLL   R6,1                    * 2 (TABLE WIDTH)
         AR    R6,R7                   INDEX INTO TABLE
         MVC   0(2,R5),0(R6)           MOVE CHARACTERS TO PRINT LINE
         LA    R3,1(,R3)
         LA    R5,2(,R5)
         BCT   R4,DUMPLOOP
*
         BR    R10
*
* --------------------------------------------------------------------*
*
*        COMPUTE NTP TIME STAMP
*        r4  = seconds since jan 1 1900
*        r5  = fractional second
*        r10 = return address
*
* -------------------------------------------------------------------
*
GETTIME  EQU   *
*
         STCK  IBMCLOCK
         LM    R8,R9,IBMCLOCK      1,000,000 TICS PER SECOND
         SRDL  R8,12               GET RID OF UNUSED BITS
*
         L     R6,=F'2000000'      2 * 1,000,000  (DIV BY 2)
*
         DR    R8,R6
         LR    R4,R9               SAVE QUOTIENT
*
         XR    R9,R9
         SRDL  R8,1                KEEP IT MANAGABLE (DIV BY 2)
*
         DR    R8,R6
         LR    R5,R9               SAVE QUOTIENT
*
         SLL   R5,1                SHIFT IT BACK (MULT BY 2)
         SLDL  R4,1                SHIFT 'EM ALL BACK (MULT BY 2)
*
         BR    R10
*
IBMCLOCK DC    2F'0'             R8 , R9  INPUT
*
NTPSTAMP DC    2F'0'
*
* ---------------------------------------------------------------------
*        LOG MESSAGE TO SYSPRINT
* ---------------------------------------------------------------------
*
LOG      DS    0F
*
         PUT   SYSPRINT,PRINTREC
*
         MVC   PRINTREC(133),SPACES    CLEAR PRINT RECORD
*
         BR    R10
*
* -------------------------------------------------------------------
*
* -------------------------------------------------------------------
*
PRINTREC DS    0F
PRINTASA DC    C' '
PRINTLIN DC    CL132' '
*
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,                      C
               RECFM=FBA,LRECL=133    ,BLKSIZE=0
*
*---------------------------------------------------------------------*
* CONSTANTS USED TO RUN PROGRAM                                       *
*---------------------------------------------------------------------*
*
SPACES   DC    CL133' '
*
         LTORG ,
*
*---------------------------------------------------------------------*
*
         COPY  X2CTBL          HEX TO CHARACTER TRANSLATION TABLE
*
*---------------------------------------------------------------------*
*
         END   BEGIN
